AWSTemplateFormatVersion: "2010-09-09"
Description: FFMPEG Decoder
  
Parameters:
  VideoUploadBucketName:
    Type: String

Mappings:
  RegionMap:
    ap-northeast-1:
      ALinuxArm: ami-002eb0cce502117b2
    ap-northeast-2:
      ALinuxArm: ami-013e35012cb169cef
    ap-northeast-3:
      ALinuxArm: ami-03b8bb56070c11374
    ap-south-1:
      ALinuxArm: ami-0f203c26f765cfb32
    ap-southeast-1:
      ALinuxArm: ami-0f064a4c9f3e6c504
    ap-southeast-2:
      ALinuxArm: ami-037cd799fbb0578cf
    ca-central-1:
      ALinuxArm: ami-0d955517b1485ed00
    eu-central-1:
      ALinuxArm: ami-0d03a2d1b22041c13
    eu-north-1:
      ALinuxArm: ami-03da1616c1fc9d795
    eu-west-1:
      ALinuxArm: ami-0fa60ab544ecd97e0
    eu-west-2:
      ALinuxArm: ami-0cc7e32fa3b6695a5
    eu-west-3:
      ALinuxArm: ami-0e7dca26aea79122d
    sa-east-1:
      ALinuxArm: ami-0461cf0c292037658
    us-east-1:
      ALinuxArm: ami-0006abfd85caddf82
    us-east-2:
      ALinuxArm: ami-0e31d4ddf8c30fd2a
    us-west-1:
      ALinuxArm: ami-02df98ef10c8d0aa9
    us-west-2:
      ALinuxArm: ami-00b8975bc3de669d2

Resources:
  FFMPEGInstance:
    Type: AWS::EC2::Instance
    Properties:
      Tags:
        - Key: Name
          Value: FFMPEG-Decoder-Instance
      ImageId: !FindInMap [ RegionMap, !Ref AWS::Region, ALinuxArm ]
      InstanceType: t4g.nano
      IamInstanceProfile: !Ref FFMPEGProfile
      KeyName: A4L
      SecurityGroupIds: [ !Ref SSHInboundSG ]
      UserData:
        Fn::Base64: !Sub
          - "#!/bin/bash -xe
        
            cd /usr/local/bin \n
            sudo mkdir ffmpeg \n
            cd ffmpeg

            sudo wget https://johnvansickle.com/ffmpeg/builds/ffmpeg-git-arm64-static.tar.xz \n
            sudo tar xvf ffmpeg-git-arm64-static.tar.xz
            
            for folder in /usr/local/bin/ffmpeg/*/ \n
            do \n
              dir=$folder \n
            done \n
            mv -v \"$dir\"ffmpeg /usr/local/bin/ffmpeg/ffmpeg \n
            ln -s /usr/local/bin/ffmpeg/ffmpeg /usr/bin/ffmpeg

            cd ~ \n
            wget https://raw.githubusercontent.com/joeyolson18/aws-ffmpeg-decoder/main/v1/decode-v1.bash \n
            sed -i 's|<queue-name>|${VideoQueue}|' decode-v1.bash \n
            sed -i 's|<bucket-name>|${VideoUploadBucket}|' decode-v1.bash \n
            bash decode-v1.bash
            "

          - VideoQueue: !Ref VideoQueue
            VideoUploadBucket: !Join [ "", ["s3://", !Ref VideoUploadBucketName, "/"] ]
   
          
  FFMPEGProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles: [ !Ref EC2DecoderRole ]
  EC2DecoderRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ec2-decoder-role
      AssumeRolePolicyDocument: {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Effect": "Allow",
                "Principal": {
                    "Service": [ "ec2.amazonaws.com" ]
                },
                "Action": [ "sts:AssumeRole" ]
            }
        ]
    }
  EC2DecoderPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ec2-get-s3-video-uploads-policy
      Roles: [ !Ref EC2DecoderRole ]
      PolicyDocument: {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Sid": "GetObject",
                "Effect": "Allow",
                "Action": "s3:GetObject",
                "Resource": !Join [ "", ["arn:aws:s3:::", !Ref VideoUploadBucketName, "/uploads/*"] ]
            },
            {
                "Sid": "PutObject",
                "Effect": "Allow",
                "Action": "s3:PutObject",
                "Resource": !Join [ "", ["arn:aws:s3:::", !Ref VideoUploadBucketName, "/*"] ]
            },
            {
                "Sid": "DeleteObject",
                "Effect": "Allow",
                "Action": "s3:DeleteObject",
                "Resource": !Join [ "", ["arn:aws:s3:::", !Ref VideoUploadBucketName, "/uploads/*"] ]
            }
        ]
    }

  SSHInboundSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: SSHInboundSG
      GroupDescription: Allows inbound SSH access to instance
      SecurityGroupIngress:
        IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
      # TODO Change to default VPC !Ref
      VpcId: vpc-0349cd1a5129f86c2

  VideoUploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref VideoUploadBucketName
      NotificationConfiguration:
        QueueConfigurations:
          - Event: s3:ObjectCreated:*
            Queue: !GetAtt VideoQueue.Arn
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: uploads/
                  - Name: suffix
                    Value: .mp4
    DependsOn:
      - VideoQueue
      - VideoQueuePolicy 

  VideoQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: VideoUploadQueue
      VisibilityTimeout: 30
      MaximumMessageSize: 4096
  VideoQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      # TODO Change the account IDs and other resources to variables
      Queues: [ !Ref VideoQueue ]
      PolicyDocument: {
        "Version": "2012-10-17",
        "Id": "example-ID",
        "Statement": [
          {
            "Sid": "_s3_send_message",
            "Effect": "Allow",
            "Principal": {
              "Service": "s3.amazonaws.com"
            },
            "Action": "SQS:SendMessage",
            "Resource": !GetAtt VideoQueue.Arn,
            "Condition": {
              "StringEquals": {
                "aws:SourceAccount": !Ref AWS::AccountId
              },
              "ArnLike": {
                "aws:SourceArn": !Join [ "", ["arn:aws:s3:::", !Ref VideoUploadBucketName ] ]
              }
            }
          },
          {
            "Sid": "__owner_statement",
            "Effect": "Allow",
            "Principal": {
              "AWS": "arn:aws:iam::712526075904:root"
            },
            "Action": "SQS:*",
            "Resource": !GetAtt VideoQueue.Arn
          },
          {
            "Sid": "__sender_statement",
            "Effect": "Allow",
            "Principal": {
              "AWS": "arn:aws:iam::712526075904:root"
            },
            "Action": "SQS:SendMessage",
            "Resource": !GetAtt VideoQueue.Arn
          },
          {
            "Sid": "__receiver_statement",
            "Effect": "Allow",
            "Principal": {
              "AWS": [
                "arn:aws:iam::712526075904:root",
                !GetAtt EC2DecoderRole.Arn
              ]
            },
            "Action": [
              "SQS:ChangeMessageVisibility",
              "SQS:DeleteMessage",
              "SQS:ReceiveMessage"
            ],
            "Resource": !GetAtt VideoQueue.Arn
          }
        ]
      }
    DependsOn:
      - VideoQueue